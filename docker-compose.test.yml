version: "2"

services:

  server:
    image: localhost:5000/sut
    build:
      context: .
      dockerfile: Dockerfile
    command: -config /config/dnscrypt-proxy.toml -loglevel 0

  sut:
    image: alpine:3.19@sha256:b5dfcf7427d7ba35bd7eb083754c14008e50fc80b00a42b55946ccbc2cc6322a
    depends_on:
      - server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /test
    entrypoint:
      - /bin/sh
      - -c
    command:
      - |
        set -ex
        apk add --no-cache bind-tools docker-cli docker-cli-compose

        server_ip="$$(dig +short server | tail -n 1)"

        while read id
        do
          if docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $${id} | grep -q "$${server_ip}"
          then
            server_id="$${id}"
            break
          fi
        done < <(docker ps --format '{{.ID}}')
        
        docker exec $${server_id} dnscrypt-proxy -version

        sleep 5

        docker exec $${server_id} dnsprobe -timeout=10s dnssec.works 127.0.0.1:5053
        ! docker exec $${server_id} dnsprobe foo.local 127.0.0.1:5053
        ! docker exec $${server_id} dnsprobe bar.local 127.0.0.1:5053

        dig @server -p 5053 dnssec.works +dnssec +multi | tee /dev/stderr | grep -wq NOERROR
        ! dig @server -p 5053 fail01.dnssec.works +dnssec +multi | tee /dev/stderr | grep -wq NOERROR
        ! dig @server -p 5053 fail02.dnssec.works +dnssec +multi | tee /dev/stderr | grep -wq NOERROR
        ! dig @server -p 5053 fail03.dnssec.works +dnssec +multi | tee /dev/stderr | grep -wq NOERROR
        ! dig @server -p 5053 fail04.dnssec.works +dnssec +multi | tee /dev/stderr | grep -wq NOERROR
